This test will hit a simple Restful web service. Details of the Restful Web service are mentioned in the below table:

 Endpoint	 http://restapi.demoqa.com/utilities/weather/city/<City>
 HTTP method type:	 GET
 Comments:	Here <City> means the city for which we are trying to retrieve the weather data. For e.g. if you want to know the weather conditions of Hyderabad, you would simple replace the <City> text with Hyderabad. The Restful resource URL for Hyderabad becomes: 
 http://restapi.demoqa.com/utilities/weather/city/Hyderabad
  Response:
  {
  “City”: “Hyderabad”,
  “Temperature”: “31.49 Degree celsius”,
  “Humidity”: “62 Percent”,
  “Weather Description”: “scattered clouds”,
  “Wind Speed”: “3.6 Km per hour”,
  “Wind Direction degree”: “270 Degree”
  }

In order to do the same thing using Rest-Assured, need to follow the steps below:
Use the RestAssured class to generate a RequestSpecification for the URL: http://restapi.demoqa.com/utilities/weather/city/Hyderabad
Specify the HTTP Method type
Send the Request to the Server
Get the Response back from the server
Print the returned Response’s Body

import org.testng.annotations.Test;
import io.restassured.RestAssured;
import io.restassured.http.Method;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;

public class SimpleGetTest {

	@Test
	public void GetWeatherDetails()
	{   
		// Specify the base URL to the RESTful web service
		RestAssured.baseURI = "http://restapi.demoqa.com/utilities/weather/city";

		// Get the RequestSpecification of the request that you want to sent
		// to the server. The server is specified by the BaseURI that we have
		// specified in the above step.
		RequestSpecification httpRequest = RestAssured.given();

		// Make a request to the server by specifying the method Type and the method URL.
		// This will return the Response from the server. Store the response in a variable.
		Response response = httpRequest.request(Method.GET, "/Hyderabad");

		// Now let us print the body of the message to see what response
		// we have recieved from the server
		String responseBody = response.getBody().asString();
		System.out.println("Response Body is =>  " + responseBody);

	}

}
  
 
